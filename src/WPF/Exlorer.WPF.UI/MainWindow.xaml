<Window Style="{DynamicResource MainWindowStyle}"
    x:Class="Exlorer.WPF.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Exlorer.WPF.UI" xmlns:b="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
		
		WindowStartupLocation="CenterOwner"
        WindowStyle="None"
        AllowsTransparency="True"
        WindowState="Maximized"
        MinWidth="500"
        MinHeight="120"
        Width="1024"
        Height="720"
        x:Name="Window">
    <Window.Resources>
        <Style x:Key="MainWindowStyle" TargetType="{x:Type Window}">
            <Setter Property="WindowChrome.WindowChrome">
                <Setter.Value>
                    <WindowChrome CaptionHeight="{Binding WindowState,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Converter={local:WindowTitleHeightConverter}}"
                                  ResizeBorderThickness="1"
                                  GlassFrameThickness="0"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border Background="Black"
                                Padding="{TemplateBinding Padding}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <!-- Title Bar -->
                                    <RowDefinition Height="auto"/>

                                    <!-- Navigation Bar -->
                                    <RowDefinition Height="36"/>

                                    <!-- BookMarks-->
                                    <RowDefinition Height="36"/>
                                    <!-- TabItemContent -->
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <!-- Title Bar -->
                                <Grid Grid.Row="0" 
                                      Height="{Binding WindowState,RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Converter={local:WindowTitleHeightConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="auto"/>
                                    </Grid.ColumnDefinitions>

                                    <ListBox ItemsSource="{Binding DirectoryTabItems}" 
                                             SelectedItem="{Binding CurrentDirectoryTabItem}"
                                             Grid.Column="0"
                                             VerticalAlignment="Bottom"
                                             Margin="0"
                                             ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                             WindowChrome.IsHitTestVisibleInChrome="True">
                                        <ListBox.Style>
                                            <Style TargetType="{x:Type ListBox}">
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                                                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                                                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                                                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                                                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                                                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBox}">
                                                            <Border x:Name="Bd" 
                                                                    Background="{TemplateBinding Background}" 
                                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                                                    Padding="0" 
                                                                    SnapsToDevicePixels="true">
                                                                <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                                                    <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                                </ScrollViewer>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <MultiTrigger>
                                                                    <MultiTrigger.Conditions>
                                                                        <Condition Property="IsGrouping" Value="true"/>
                                                                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                                                    </MultiTrigger.Conditions>
                                                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                                                </MultiTrigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ListBox.Style>
                                        <ListBox.ItemsPanel>
                                            <ItemsPanelTemplate>
                                                <StackPanel Orientation="Horizontal"/>
                                            </ItemsPanelTemplate>
                                        </ListBox.ItemsPanel>
                                        <ListBox.ItemTemplate>
                                            <DataTemplate>
                                                <Grid >
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition />
                                                        <ColumnDefinition  Width="auto"/>
                                                    </Grid.ColumnDefinitions>
                                                    <TextBlock Grid.Column="0"
                                                               Margin="10 2"
                                                               Text="{Binding Name}" 
                                                               Foreground="White"/>
                                                    <Button Grid.Column="1"
                                                            Margin="2"
                                                            Command="{Binding DataContext.CloseCommand, ElementName=Window}"
                                                            CommandParameter="{Binding}">
                                                        <Button.Style>
                                                            <Style TargetType="{x:Type Button}">
                                                                <Setter Property="Foreground" Value="White"/>
                                                                <Setter Property="Background" Value="Transparent"/>
                                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                                            <Border x:Name="border" 
                                                                                Background="{TemplateBinding Background}" 
                                                                                BorderBrush="{TemplateBinding BorderBrush}" 
                                                                                BorderThickness="{TemplateBinding BorderThickness}" 
                                                                                SnapsToDevicePixels="true"
                                                                                Width="16"
                                                                                Height="16" 
                                                                                CornerRadius="8">
                                                                                <Viewbox Width="12" 
                                                                                         Height="12" 
                                                                                         Stretch="Uniform"
                                                                                         VerticalAlignment="Center"
                                                                                         HorizontalAlignment="Center">
                                                                                    <Canvas Width="24" Height="24"
                                                                                        VerticalAlignment="Center"
                                                                                        HorizontalAlignment="Center">
                                                                                        <Path Fill="{TemplateBinding Foreground}" Data="M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z" />
                                                                                    </Canvas>
                                                                                </Viewbox>
                                                                            </Border>
                                                                            <ControlTemplate.Triggers>
                                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                                    <Setter TargetName="border" Property="Background" Value="#1a1a1a"/>
                                                                                </Trigger>
                                                                                <Trigger Property="IsPressed" Value="True">
                                                                                    <Setter Property="Background" Value="#333333"/>
                                                                                </Trigger>
                                                                            </ControlTemplate.Triggers>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </Button.Style>
                                                    </Button>
                                                </Grid>
                                            </DataTemplate>
                                        </ListBox.ItemTemplate>
                                        <ListBox.ItemContainerStyle>
                                            <Style TargetType="{x:Type ListBoxItem}">
                                                <Setter Property="SnapsToDevicePixels" Value="True"/>
                                                <Setter Property="Height" Value="32"/>
                                                <Setter Property="Padding" Value="4"/>
                                                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                                            <Border x:Name="Bd" 
                                                                    Background="{TemplateBinding Background}" 
                                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                                                    Padding="{TemplateBinding Padding}" 
                                                                    SnapsToDevicePixels="true"
                                                                    CornerRadius="7 7 0 0">
                                                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                                                             Value="Normal">
                                                                    <Setter Property="Height" Value="34"/>
                                                                </DataTrigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter Property="Background" Value="#161616"/>
                                                                </Trigger>
                                                                <Trigger Property="IsSelected" Value="True">
                                                                    <Setter Property="Background" Value="#353535"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ListBox.ItemContainerStyle>
                                    </ListBox>

                                    <Button Grid.Column="1"
                                            Command="{Binding AddTabItemCommand}"
                                            Margin="2"
                                            local:Windows.IsActive="{TemplateBinding IsActive}"
                                            WindowChrome.IsHitTestVisibleInChrome="True"
                                            ToolTip="Новая вкладка"
                                           >
                                        <Button.Style>
                                            <Style TargetType="{x:Type Button}">
                                                <Setter Property="Foreground" Value="White"/>
                                                <Setter Property="Background" Value="Transparent"/>
                                                <Setter Property="BorderBrush" Value="Transparent"/>
                                                <Setter Property="BorderThickness" Value="0"/>
                                                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="{x:Type Button}">
                                                            <Border x:Name="border" 
                                                                    Background="{TemplateBinding Background}" 
                                                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                                                    SnapsToDevicePixels="true"
                                                                    Height="28"
                                                                    Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                                                    CornerRadius="14">
                                                                <Viewbox Width="18" Height="18" Stretch="Uniform">
                                                                    <Canvas Width="24" Height="24">
                                                                        <Path Fill="{TemplateBinding Foreground}" Data="M19,13H13V19H11V13H5V11H11V5H13V11H19V13Z" />
                                                                    </Canvas>
                                                                </Viewbox>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="border" Property="Background" Value="#1a1a1a"/>
                                                                </Trigger>
                                                                <DataTrigger Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Value="False">
                                                                    <Setter Property="Foreground" Value="#666666"/>
                                                                </DataTrigger>
                                                                <MultiDataTrigger>
                                                                    <MultiDataTrigger.Conditions>
                                                                        <Condition  Binding="{Binding IsActive, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Window}}" Value="False"/>
                                                                        <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                                                                    </MultiDataTrigger.Conditions>
                                                                    <MultiDataTrigger.Setters>
                                                                        <Setter Property="Foreground" Value="#b8b8b8"/>
                                                                    </MultiDataTrigger.Setters>
                                                                </MultiDataTrigger>
                                                                <Trigger Property="IsPressed" Value="True">
                                                                    <Setter Property="Background" Value="#333333"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </Button.Style>
                                    </Button>

                                    <StackPanel Grid.Column="3"
                                                Orientation="Horizontal"
                                                VerticalAlignment="Top"
                                                WindowChrome.IsHitTestVisibleInChrome="True">
                                        <Button Width="44"
											    Height="28"
											    Click="CollapseButton_Click"
                                                local:Windows.IsActive="{TemplateBinding IsActive}"
                                                ToolTip="Свернуть">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Foreground" Value="White"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                                                    <Viewbox Width="16" Height="16" Stretch="Uniform">
                                                                        <Canvas Width="24" Height="24">
                                                                            <Path Fill="{TemplateBinding Foreground}" Data="M20,14H4V10H20" />
                                                                        </Canvas>
                                                                    </Viewbox>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="border" Property="Background" Value="#1a1a1a"/>
                                                                    </Trigger>
                                                                    <Trigger Property="local:Windows.IsActive" Value="False">
                                                                        <Setter Property="Foreground" Value="#666666"/>
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="local:Windows.IsActive" Value="False"/>
                                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <MultiTrigger.Setters>
                                                                            <Setter Property="Foreground" Value="#b8b8b8"/>
                                                                        </MultiTrigger.Setters>
                                                                    </MultiTrigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Background" Value="#333333"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                        <Button Width="44"
											    Height="28"
											    Click="ExpandButton_Click"
                                                local:Windows.IsActive="{TemplateBinding IsActive}"
                                                local:Windows.WindowState="{TemplateBinding WindowState}">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Foreground" Value="White"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                                                    <Viewbox Width="16" Height="16" Stretch="Uniform">
                                                                        <ContentPresenter/>
                                                                    </Viewbox>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="border" Property="Background" Value="#1a1a1a"/>
                                                                    </Trigger>
                                                                    <Trigger Property="local:Windows.IsActive" Value="False">
                                                                        <Setter Property="Foreground" Value="#666666"/>
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="local:Windows.IsActive" Value="False"/>
                                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <MultiTrigger.Setters>
                                                                            <Setter Property="Foreground" Value="#b8b8b8"/>
                                                                        </MultiTrigger.Setters>
                                                                    </MultiTrigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Background" Value="#8a0a14"/>
                                                                    </Trigger>

                                                                    <Trigger Property="local:Windows.WindowState" Value="Normal">
                                                                        <Setter Property="Content">
                                                                            <Setter.Value>
                                                                                <Canvas Width="24" Height="24">
                                                                                    <Path Fill="{TemplateBinding Foreground}" Data="M4,4H20V20H4V4M6,8V18H18V8H6Z" />
                                                                                </Canvas>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter Property="ToolTip" Value="Развернуть"/>
                                                                    </Trigger>
                                                                    <Trigger Property="local:Windows.WindowState" Value="Maximized">
                                                                        <Setter Property="Content">
                                                                            <Setter.Value>
                                                                                <Canvas Width="24" Height="24">
                                                                                    <Path Fill="{TemplateBinding Foreground}" 
                                                                                          Data="M4,8H8V4H20V16H16V20H4V8M16,8V14H18V6H10V8H16M6,12V18H14V12H6Z" />
                                                                                </Canvas>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                        <Setter Property="ToolTip" Value="Свернуть в окно"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                            <Canvas Width="24" Height="24">
                                                <Path Fill="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Button}}}" Data="M4,4H20V20H4V4M6,8V18H18V8H6Z" />
                                            </Canvas>
                                        </Button>
                                        <Button Width="44"
											    Height="28"
											    Click="CloseButton_Click"
                                                ToolTip="Закрыть"
                                                local:Windows.IsActive="{TemplateBinding IsActive}">
                                            <Button.Style>
                                                <Style TargetType="{x:Type Button}">
                                                    <Setter Property="Foreground" Value="White"/>
                                                    <Setter Property="Background" Value="Transparent"/>
                                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                                    <Setter Property="BorderThickness" Value="0"/>
                                                    <Setter Property="HorizontalContentAlignment" Value="Center"/>
                                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                                    <Setter Property="Template">
                                                        <Setter.Value>
                                                            <ControlTemplate TargetType="{x:Type Button}">
                                                                <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                                                                    <Viewbox Width="16" Height="16" Stretch="Uniform">
                                                                        <Canvas Width="24" Height="24">
                                                                            <Path Fill="{TemplateBinding Foreground}" Data="M13.46,12L19,17.54V19H17.54L12,13.46L6.46,19H5V17.54L10.54,12L5,6.46V5H6.46L12,10.54L17.54,5H19V6.46L13.46,12Z" />
                                                                        </Canvas>
                                                                    </Viewbox>
                                                                </Border>
                                                                <ControlTemplate.Triggers>
                                                                    <Trigger Property="IsMouseOver" Value="True">
                                                                        <Setter TargetName="border" Property="Background" Value="#e81123"/>
                                                                    </Trigger>
                                                                    <Trigger Property="local:Windows.IsActive" Value="False">
                                                                        <Setter Property="Foreground" Value="#666666"/>
                                                                    </Trigger>
                                                                    <MultiTrigger>
                                                                        <MultiTrigger.Conditions>
                                                                            <Condition Property="local:Windows.IsActive" Value="False"/>
                                                                            <Condition Property="IsMouseOver" Value="True"/>
                                                                        </MultiTrigger.Conditions>
                                                                        <MultiTrigger.Setters>
                                                                            <Setter Property="Foreground" Value="#b8b8b8"/>
                                                                        </MultiTrigger.Setters>
                                                                    </MultiTrigger>
                                                                    <Trigger Property="IsPressed" Value="True">
                                                                        <Setter Property="Background" Value="#8a0a14"/>
                                                                    </Trigger>
                                                                </ControlTemplate.Triggers>
                                                            </ControlTemplate>
                                                        </Setter.Value>
                                                    </Setter>
                                                </Style>
                                            </Button.Style>
                                        </Button>
                                    </StackPanel>
                                </Grid>

                                <!-- Navigation Bar -->
                                <Grid Grid.Row="1"
                                      Background="#353535">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Button Grid.Column="0"
                                            Margin="2"
                                            Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                            Content="&lt;-"
                                            Command="{Binding CurrentDirectoryTabItem.MoveBackCommand}"/>
                                    <Button Grid.Column="1"
                                            Margin="2"
                                            Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                            Content="-&gt;"
                                            Command="{Binding CurrentDirectoryTabItem.MoveForwardCommand}"/>
                                    <Button Grid.Column="2"
                                            Margin="2"
                                            Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                            Command="{Binding CurrentDirectoryTabItem.RefreshCommand}"
                                            Content="o"/>
                                    <TextBox Grid.Column="3"
                                             VerticalAlignment="Center"
                                             FontSize="16"
                                             Text="{Binding CurrentDirectoryTabItem.FilePath}"/>
                                </Grid>

                                <!-- BookMarks -->
                                <StackPanel Grid.Row="2"
                                    Orientation="Horizontal"
                                    Background="#FF353535">
                                    <Menu>
                                        <MenuItem Header="Games"/>
                                    </Menu>
                                </StackPanel>

                                <!-- TabItemContent -->
                                <ContentControl Grid.Row="3"
                                                Content="{Binding CurrentDirectoryTabItem}">
                                    <ContentControl.ContentTemplate>
                                        <DataTemplate>
                                            <local:DirectoryTabItem>
                                                <local:DirectoryTabItem.Background>
                                                    <ImageBrush ImageSource="/Assets/background.jpg"/>
                                                </local:DirectoryTabItem.Background>
                                            </local:DirectoryTabItem>
                                        </DataTemplate>
                                    </ContentControl.ContentTemplate>
                                </ContentControl>
                            </Grid>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <b:Interaction.Behaviors>
        <local:WindowResizeFixerBehavior/>
    </b:Interaction.Behaviors>
</Window>
